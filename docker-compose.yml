version: "3.9"

services:
  api:
    build: ./backend
    env_file:
      - backend/.env.example
    ports:
      - "8001:8001"
    depends_on:
      - postgres
      - redis
    profiles: ["dev", "prod"]

  frontend:
    build: ./frontend
    env_file:
      - frontend/.env.example
    ports:
      - "5173:5173"
    depends_on:
      - api
    profiles: ["dev", "prod"]

  caddy:
    image: caddy:2-alpine
    volumes:
      - ./infra/caddy/Caddyfile:/etc/caddy/Caddyfile
    ports:
      - "8080:8080"
    depends_on:
      - api
      - frontend
    profiles: ["dev", "prod"]

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ccu}
      POSTGRES_USER: ${POSTGRES_USER:-ccu}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ccu}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    profiles: ["dev", "prod"]

  redis:
    image: redis:7-alpine
    profiles: ["dev", "prod"]

  minio:
    image: minio/minio
    command: server /data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio123}
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/data
    profiles: ["minio"]

  prometheus:
    image: prom/prometheus
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    profiles: ["monitoring"]

  grafana:
    image: grafana/grafana
    volumes:
      - ./infra/grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
    profiles: ["monitoring"]

  loki:
    image: grafana/loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - ./infra/loki/loki-config.yml:/etc/loki/local-config.yaml
    profiles: ["monitoring"]

  promtail:
    image: grafana/promtail
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./infra/promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log
    depends_on:
      - loki
    profiles: ["monitoring"]

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    profiles: ["monitoring"]

volumes:
  postgres_data:
  minio_data:
